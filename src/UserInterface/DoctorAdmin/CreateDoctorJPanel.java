/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorAdmin;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorAdminOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.QuickAssist;
import Business.Role.DoctorRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanka_001
 */
public class CreateDoctorJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    DoctorAdminOrganization doctorAdminOrganization;
    Enterprise enterprise;
    QuickAssist system;
    int docID;

    /**
     * Creates new form CreateDoctorJPanel
     */
    public CreateDoctorJPanel(JPanel userProcessContainer, QuickAssist system, Enterprise enterprise, Organization doctorAdminOrganization) {
        initComponents();
        this.setBackground(Color.white);
        this.doctorAdminOrganization = (DoctorAdminOrganization) doctorAdminOrganization;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        lblNameStatus = new javax.swing.JLabel();
        lblUserNameStatus = new javax.swing.JLabel();
        lblPasswordStatus = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Doctor Name");

        txtDocName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtDocName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtDocNameMouseExited(evt);
            }
        });
        txtDocName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDocNameKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Address");

        txtAddress.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("User Name");

        txtUserName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtUserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtUserNameMouseExited(evt);
            }
        });
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });
        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserNameKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Password");

        txtPassword.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnCreate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        tblDoctor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "User Name", "Doctor Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDoctor);
        if (tblDoctor.getColumnModel().getColumnCount() > 0) {
            tblDoctor.getColumnModel().getColumn(0).setResizable(false);
            tblDoctor.getColumnModel().getColumn(1).setResizable(false);
            tblDoctor.getColumnModel().getColumn(2).setResizable(false);
        }

        btnDelete.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblNameStatus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblNameStatus.setText("                                                     ");

        lblUserNameStatus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblUserNameStatus.setText("                                                     ");

        lblPasswordStatus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblPasswordStatus.setText("                                                     ");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setText("Add or Manage Doctors");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnBack)
                        .addGap(32, 32, 32)
                        .addComponent(btnCreate)
                        .addGap(50, 50, 50)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblNameStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPasswordStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblUserNameStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserNameStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordStatus))
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnBack)
                    .addComponent(btnDelete))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblDoctor.getModel();

        dtm.setRowCount(0);
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof DoctorOrganization) {
                for (Employee emp : organization.getEmployeeDirectory().getEmployeeList()) {
                    Object[] row = new Object[3];
                    row[0] = emp;
                    row[1] = emp.getUserAccount().getUserName();
                    row[2] = emp.getAddress();

                    dtm.addRow(row);
                }

            }

        }
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        int count = 0;
        if (txtAddress.getText().trim().isEmpty()) {
            count++;
        }
        if (txtDocName.getText().trim().isEmpty()) {
            count++;
        }
        if (txtPassword.getText().trim().isEmpty()) {
            count++;
        }
        if (txtUserName.getText().trim().isEmpty()) {
            count++;
        }

        if (count > 0) {
            JOptionPane.showMessageDialog(null, "Please enter all the details", "Information", JOptionPane.ERROR_MESSAGE);
        } else {
            String userName = txtUserName.getText();
            String address = txtAddress.getText();
            String docName = txtDocName.getText();
            String password = txtPassword.getText();

            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof DoctorOrganization) {
                    for (Role role : org.getSupportedRole()) {
                        if (role instanceof DoctorRole) {
                            Employee emp = org.getEmployeeDirectory().createEmployee(docName, docID, address);
                            UserAccount ua = org.getUserAccountDirectory().createEmployeeUserAccount(userName, password, emp, role);
                            emp.setUserAccount(ua);
                        }
                    }
                    populateTable();
                }
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblDoctor.getSelectedRow();
        Employee emp = (Employee) tblDoctor.getValueAt(selectedRow, 0);
        UserAccount ua = emp.getUserAccount();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {
                for (Role role : org.getSupportedRole()) {
                    if (role instanceof DoctorRole) {
                        org.getUserAccountDirectory().deleteEmployeeUserAccount(ua);
                        org.getEmployeeDirectory().deleteEmployee(emp);
                    }
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtDocNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocNameKeyPressed
        char percharacter = evt.getKeyChar();
        if (percharacter >= 65 && percharacter < 90 || percharacter >= 97 && percharacter <= 122 || percharacter == 32 || percharacter == 8) {
            lblNameStatus.setText("");
            txtDocName.setEditable(true);
            txtDocName.setBackground(Color.white);
        } else {
            evt.consume();
            lblNameStatus.setText("Doctor name can only be alphabetic");
            txtDocName.setEditable(false);
            txtDocName.setBackground(Color.yellow);
        }
    }//GEN-LAST:event_txtDocNameKeyPressed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyPressed
        char percharacter = evt.getKeyChar();
        if (percharacter >= 65 && percharacter < 90 || percharacter >= 97 && percharacter <= 122 || percharacter == 32 || percharacter == 8 || (percharacter >= 48 && percharacter < 58)) {
            lblUserNameStatus.setText("");
            txtUserName.setEditable(true);
            txtUserName.setBackground(Color.white);
        } else {
            evt.consume();
            lblUserNameStatus.setText("Please enter alphabets or alphabet-number combination");
            txtUserName.setEditable(false);
            txtUserName.setBackground(Color.yellow);
        }
    }//GEN-LAST:event_txtUserNameKeyPressed

    private void txtDocNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDocNameMouseExited
        txtDocName.setBackground(Color.white);
        lblNameStatus.setText("");
    }//GEN-LAST:event_txtDocNameMouseExited

    private void txtUserNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUserNameMouseExited
        txtUserName.setBackground(Color.white);
        lblUserNameStatus.setText("");
    }//GEN-LAST:event_txtUserNameMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNameStatus;
    private javax.swing.JLabel lblPasswordStatus;
    private javax.swing.JLabel lblUserNameStatus;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
