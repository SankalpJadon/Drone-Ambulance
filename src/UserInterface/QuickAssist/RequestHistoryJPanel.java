/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.QuickAssist;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.HospitalOrganization;
import Business.Organization.Organization;
import Business.QuickAssist;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientDoctorWorkRequest;
import Business.WorkQueue.QuickAssistDoctorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanka_001
 */
public class RequestHistoryJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount userAccount;
    Organization organization;
    Enterprise enterprise;
    QuickAssist system;
    Network network;
    QuickAssistDoctorWorkRequest qucikAssistDoctorWorkRequest;
    PatientDoctorWorkRequest patientDoctorWorkRequest;

    /**
     * Creates new form RequestHistoryJPanel
     */
    public RequestHistoryJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, QuickAssist system, Network network) {
        initComponents();
        this.setBackground(Color.white);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.system = system;
        populateTable();

    }

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblRequestHistory.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request.getStatus().equals("Task completed")) {
                if (request instanceof PatientDoctorWorkRequest) {
                    System.out.println("HI");
                    PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest) request;
                    {
                        Object[] row = new Object[6];
                        row[0] = patientDoctorWorkRequest.getAssignedPatient();
                        row[1] = ((PatientDoctorWorkRequest) patientDoctorWorkRequest).getAssignedDrone();
                        row[2] = patientDoctorWorkRequest.getAssignedDoctor();
                        row[3] = patientDoctorWorkRequest.getEta();
                        row[4] = patientDoctorWorkRequest.getMessage();
                        row[5] = patientDoctorWorkRequest.getStatus();

                        model.addRow(row);
                    }
                    
                } else if (request instanceof QuickAssistDoctorWorkRequest) {
                    QuickAssistDoctorWorkRequest quickAssistDoctorWorkRequest = (QuickAssistDoctorWorkRequest) request;
                    {
                        Object[] row = new Object[6];
                        row[0] = quickAssistDoctorWorkRequest;
                        row[1] = ((QuickAssistDoctorWorkRequest) request).getPatient();
                        row[2] = quickAssistDoctorWorkRequest.getHospital();
                        row[3] = quickAssistDoctorWorkRequest;
                        row[4] = quickAssistDoctorWorkRequest.getMessage();
                        row[5] = quickAssistDoctorWorkRequest;

                        model.addRow(row);

                    }

                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestHistory = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        tblRequestHistory.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tblRequestHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Drones Name", "Doctor Name", "ETA(mins)", "Doctor's Comments", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequestHistory);
        if (tblRequestHistory.getColumnModel().getColumnCount() > 0) {
            tblRequestHistory.getColumnModel().getColumn(0).setResizable(false);
            tblRequestHistory.getColumnModel().getColumn(1).setResizable(false);
            tblRequestHistory.getColumnModel().getColumn(2).setResizable(false);
            tblRequestHistory.getColumnModel().getColumn(3).setResizable(false);
            tblRequestHistory.getColumnModel().getColumn(4).setResizable(false);
            tblRequestHistory.getColumnModel().getColumn(5).setResizable(false);
        }

        btnBack.setIcon(new javax.swing.ImageIcon("C:\\Users\\sanka_001\\Desktop\\Buttons\\back.png")); // NOI18N
        btnBack.setHideActionText(true);
        btnBack.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Images/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1146, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequestHistory;
    // End of variables declaration//GEN-END:variables
}
